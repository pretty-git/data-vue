{"remainingRequest":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shzto/Documents/datav/data-echart/data-vue/src/components/echart/echart-line.vue?vue&type=style&index=0&id=f407957c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/src/components/echart/echart-line.vue","mtime":1697421843906},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LmxpbmVzIHsKICAgIG1hcmdpbi1ib3R0b206IDEwMHB4Owp9CgouY2hhcnQgewogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tdG9wOiAxNnB4OwoKfQoKOjp2LWRlZXAgewogICAgLmR2LWJvcmRlci1ib3gtMTAgLmJvcmRlci1ib3gtY29udGVudCB7CiAgICAgICAgcGFkZGluZzogMjJweCAwOwogICAgICAgIG1hcmdpbi10b3A6IDEycHg7CgogICAgfQp9Cg=="},{"version":3,"sources":["echart-line.vue"],"names":[],"mappings":"AAiLA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"echart-line.vue","sourceRoot":"src/components/echart","sourcesContent":["<template>\n    <div class=\"lines\" :style=\"{ width: width }\">\n        <div class=\"echart-title\" v-show=\"show\">\n            <div class=\"left-icon\"></div>图表信息折线图\n        </div>\n        <dv-border-box-10 style=\"width: 100%;\" v-if=\"isBorder\" :style=\"{ height: height }\">\n            <div class=\"chart\" :style=\"{ height: height }\" id=\"chart_left1\"></div>\n        </dv-border-box-10>\n        <div class=\"chart\" :style=\"{ height: height }\" id=\"chart_left1\" v-else></div>\n\n    </div>\n</template>\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n    name: 'Line',\n    data() {\n        return {\n\n        }\n    },\n    props: {\n        show: {\n            type: Boolean,\n            default: true\n        },\n        isBorder: {\n            type: Boolean,\n            default: true\n        },\n        width: {\n            type: String,\n            default: '25%'\n        },\n        height: {\n            type: String,\n            default: '35vh'\n        },\n        data: {\n            type: Object,\n            default: () => null\n        }\n    },\n\n    watch: {\n        data(value) {\n            if (value) {\n                this.getEchartLeft1(value);\n\n            }\n        }\n    },\n    methods: {\n        getEchartLeft1(data) {\n            const garbage = data.weigth.map(item => item.weigth)\n            const car = data.trans.map(item => item.number)\n\n            let myChart = echarts.init(document.getElementById('chart_left1'));\n\n            let option = {\n                legend: {\n                    right: '5%',\n                    data: ['垃圾重量（吨）', '进站车次（次）'],\n                    textStyle: {\n                        color: '#ffffff'  // 将x坐标轴文字颜色设置为白色\n                    },\n                    type: 'scroll',\n                    orient: 'vertical',\n                },\n\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: data.weigth.map(item => item.index),\n                    axisLabel: {\n                        textStyle: {\n                            color: '#ffffff'  // 将x坐标轴文字颜色设置为白色\n                        }\n                    },\n                    axisLine: {\n                        show: true,\n                        lineStyle: {\n                            color: '#00deff'\n                        }\n                    }\n                },\n                yAxis: {\n                    type: 'value',\n                    axisLabel: {\n                        textStyle: {\n                            color: '#ffffff'  // 将x坐标轴文字颜色设置为白色\n                        }\n                    },\n                    splitLine: {\n                        show: true,\n                        lineStyle: {\n                            color: '#00deff'\n                        },\n                    },\n                    axisLine: {\n                        show: true,\n                        lineStyle: {\n                            color: '#fff'\n                        }\n                    }\n                },\n                series: [\n                    {\n                        name: '垃圾重量（吨）',\n                        type: 'line',\n                        stack: 'Total',\n                        data: garbage,\n                        areaStyle: {\n                            // 区域图渐变色\n                            color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [\n                                { offset: 0, color: '#49a1c5' },\n                                { offset: 0.5, color: '#387ea1' },\n                                { offset: 1, color: '#f3f6f700' }\n                            ])\n                        },\n                    },\n                    {\n                        name: '进站车次（次）',\n                        type: 'line',\n                        stack: 'Total',\n                        data: car,\n                        areaStyle: {\n                            // 区域图渐变色\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                {\n                                    offset: 0,\n                                    color: '#38487b'\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#f3f6f700'\n                                }\n                            ]),\n                            opacity: 0.5\n                        }\n                    }\n                ]\n            }\n\n            myChart.setOption(option, true);\n            window.addEventListener('resize', () => {\n                myChart.resize();\n            })\n        },\n    }\n}\n</script>\n<style lang=\"scss\" scoped> .lines {\n     margin-bottom: 100px;\n }\n\n .chart {\n     width: 100%;\n     margin-top: 16px;\n\n }\n\n ::v-deep {\n     .dv-border-box-10 .border-box-content {\n         padding: 22px 0;\n         margin-top: 12px;\n\n     }\n }\n</style>"]}]}