{"remainingRequest":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/babel-loader/lib/index.js!/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shzto/Documents/datav/data-echart/data-vue/src/components/echart/echart-line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/src/components/echart/echart-line.vue","mtime":1697421843906},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/babel.config.js","mtime":1697419296762},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shzto/Documents/datav/data-echart/data-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMaW5lJywKICBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgcHJvcHM6IHsKICAgIHNob3c6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGlzQm9yZGVyOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICB3aWR0aDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcyNSUnCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJzM1dmgnCiAgICB9LAogICAgZGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IG51bGwKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBkYXRhKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSkgewogICAgICAgIHRoaXMuZ2V0RWNoYXJ0TGVmdDEodmFsdWUpOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRFY2hhcnRMZWZ0MShkYXRhKSB7CiAgICAgIGNvbnN0IGdhcmJhZ2UgPSBkYXRhLndlaWd0aC5tYXAoaXRlbSA9PiBpdGVtLndlaWd0aCk7CiAgICAgIGNvbnN0IGNhciA9IGRhdGEudHJhbnMubWFwKGl0ZW0gPT4gaXRlbS5udW1iZXIpOwogICAgICBsZXQgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhcnRfbGVmdDEnKSk7CiAgICAgIGxldCBvcHRpb24gPSB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICByaWdodDogJzUlJywKICAgICAgICAgIGRhdGE6IFsn5Z6D5Zy+6YeN6YeP77yI5ZCo77yJJywgJ+i/m+ermei9puasoe+8iOasoe+8iSddLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiAnI2ZmZmZmZicgLy8g5bCGeOWdkOagh+i9tOaWh+Wtl+minOiJsuiuvue9ruS4uueZveiJsgogICAgICAgICAgfSwKCiAgICAgICAgICB0eXBlOiAnc2Nyb2xsJywKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJwogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNCUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGRhdGE6IGRhdGEud2VpZ3RoLm1hcChpdGVtID0+IGl0ZW0uaW5kZXgpLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZmZmZicgLy8g5bCGeOWdkOagh+i9tOaWh+Wtl+minOiJsuiuvue9ruS4uueZveiJsgogICAgICAgICAgICB9CiAgICAgICAgICB9LAoKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzAwZGVmZicKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmZmZmJyAvLyDlsIZ45Z2Q5qCH6L205paH5a2X6aKc6Imy6K6+572u5Li655m96ImyCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCgogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzAwZGVmZicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+Weg+WcvumHjemHj++8iOWQqO+8iScsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBzdGFjazogJ1RvdGFsJywKICAgICAgICAgIGRhdGE6IGdhcmJhZ2UsCiAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgLy8g5Yy65Z+f5Zu+5riQ5Y+Y6ImyCiAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDEsIDEsIFt7CiAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgIGNvbG9yOiAnIzQ5YTFjNScKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG9mZnNldDogMC41LAogICAgICAgICAgICAgIGNvbG9yOiAnIzM4N2VhMScKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgICAgICBjb2xvcjogJyNmM2Y2ZjcwMCcKICAgICAgICAgICAgfV0pCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ+i/m+ermei9puasoe+8iOasoe+8iScsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBzdGFjazogJ1RvdGFsJywKICAgICAgICAgIGRhdGE6IGNhciwKICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICAvLyDljLrln5/lm77muJDlj5joibIKICAgICAgICAgICAgY29sb3I6IG5ldyBlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMCwgMCwgMSwgW3sKICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgY29sb3I6ICcjMzg0ODdiJwogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgIGNvbG9yOiAnI2YzZjZmNzAwJwogICAgICAgICAgICB9XSksCiAgICAgICAgICAgIG9wYWNpdHk6IDAuNQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7CiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7CiAgICAgICAgbXlDaGFydC5yZXNpemUoKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["echarts","name","data","props","show","type","Boolean","default","isBorder","width","String","height","Object","watch","value","getEchartLeft1","methods","garbage","weigth","map","item","car","trans","number","myChart","init","document","getElementById","option","legend","right","textStyle","color","orient","grid","left","bottom","containLabel","xAxis","boundaryGap","index","axisLabel","axisLine","lineStyle","yAxis","splitLine","series","stack","areaStyle","graphic","LinearGradient","offset","opacity","setOption","window","addEventListener","resize"],"sources":["src/components/echart/echart-line.vue"],"sourcesContent":["<template>\n    <div class=\"lines\" :style=\"{ width: width }\">\n        <div class=\"echart-title\" v-show=\"show\">\n            <div class=\"left-icon\"></div>图表信息折线图\n        </div>\n        <dv-border-box-10 style=\"width: 100%;\" v-if=\"isBorder\" :style=\"{ height: height }\">\n            <div class=\"chart\" :style=\"{ height: height }\" id=\"chart_left1\"></div>\n        </dv-border-box-10>\n        <div class=\"chart\" :style=\"{ height: height }\" id=\"chart_left1\" v-else></div>\n\n    </div>\n</template>\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n    name: 'Line',\n    data() {\n        return {\n\n        }\n    },\n    props: {\n        show: {\n            type: Boolean,\n            default: true\n        },\n        isBorder: {\n            type: Boolean,\n            default: true\n        },\n        width: {\n            type: String,\n            default: '25%'\n        },\n        height: {\n            type: String,\n            default: '35vh'\n        },\n        data: {\n            type: Object,\n            default: () => null\n        }\n    },\n\n    watch: {\n        data(value) {\n            if (value) {\n                this.getEchartLeft1(value);\n\n            }\n        }\n    },\n    methods: {\n        getEchartLeft1(data) {\n            const garbage = data.weigth.map(item => item.weigth)\n            const car = data.trans.map(item => item.number)\n\n            let myChart = echarts.init(document.getElementById('chart_left1'));\n\n            let option = {\n                legend: {\n                    right: '5%',\n                    data: ['垃圾重量（吨）', '进站车次（次）'],\n                    textStyle: {\n                        color: '#ffffff'  // 将x坐标轴文字颜色设置为白色\n                    },\n                    type: 'scroll',\n                    orient: 'vertical',\n                },\n\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: data.weigth.map(item => item.index),\n                    axisLabel: {\n                        textStyle: {\n                            color: '#ffffff'  // 将x坐标轴文字颜色设置为白色\n                        }\n                    },\n                    axisLine: {\n                        show: true,\n                        lineStyle: {\n                            color: '#00deff'\n                        }\n                    }\n                },\n                yAxis: {\n                    type: 'value',\n                    axisLabel: {\n                        textStyle: {\n                            color: '#ffffff'  // 将x坐标轴文字颜色设置为白色\n                        }\n                    },\n                    splitLine: {\n                        show: true,\n                        lineStyle: {\n                            color: '#00deff'\n                        },\n                    },\n                    axisLine: {\n                        show: true,\n                        lineStyle: {\n                            color: '#fff'\n                        }\n                    }\n                },\n                series: [\n                    {\n                        name: '垃圾重量（吨）',\n                        type: 'line',\n                        stack: 'Total',\n                        data: garbage,\n                        areaStyle: {\n                            // 区域图渐变色\n                            color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [\n                                { offset: 0, color: '#49a1c5' },\n                                { offset: 0.5, color: '#387ea1' },\n                                { offset: 1, color: '#f3f6f700' }\n                            ])\n                        },\n                    },\n                    {\n                        name: '进站车次（次）',\n                        type: 'line',\n                        stack: 'Total',\n                        data: car,\n                        areaStyle: {\n                            // 区域图渐变色\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                {\n                                    offset: 0,\n                                    color: '#38487b'\n                                },\n                                {\n                                    offset: 1,\n                                    color: '#f3f6f700'\n                                }\n                            ]),\n                            opacity: 0.5\n                        }\n                    }\n                ]\n            }\n\n            myChart.setOption(option, true);\n            window.addEventListener('resize', () => {\n                myChart.resize();\n            })\n        },\n    }\n}\n</script>\n<style lang=\"scss\" scoped> .lines {\n     margin-bottom: 100px;\n }\n\n .chart {\n     width: 100%;\n     margin-top: 16px;\n\n }\n\n ::v-deep {\n     .dv-border-box-10 .border-box-content {\n         padding: 22px 0;\n         margin-top: 12px;\n\n     }\n }\n</style>"],"mappings":"AAaA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA,QAEA;EACA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,QAAA;MACAH,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAE,KAAA;MACAJ,IAAA,EAAAK,MAAA;MACAH,OAAA;IACA;IACAI,MAAA;MACAN,IAAA,EAAAK,MAAA;MACAH,OAAA;IACA;IACAL,IAAA;MACAG,IAAA,EAAAO,MAAA;MACAL,OAAA,EAAAA,CAAA;IACA;EACA;EAEAM,KAAA;IACAX,KAAAY,KAAA;MACA,IAAAA,KAAA;QACA,KAAAC,cAAA,CAAAD,KAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAD,eAAAb,IAAA;MACA,MAAAe,OAAA,GAAAf,IAAA,CAAAgB,MAAA,CAAAC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAF,MAAA;MACA,MAAAG,GAAA,GAAAnB,IAAA,CAAAoB,KAAA,CAAAH,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAG,MAAA;MAEA,IAAAC,OAAA,GAAAxB,OAAA,CAAAyB,IAAA,CAAAC,QAAA,CAAAC,cAAA;MAEA,IAAAC,MAAA;QACAC,MAAA;UACAC,KAAA;UACA5B,IAAA;UACA6B,SAAA;YACAC,KAAA;UACA;;UACA3B,IAAA;UACA4B,MAAA;QACA;QAEAC,IAAA;UACAC,IAAA;UACAL,KAAA;UACAM,MAAA;UACAC,YAAA;QACA;QAEAC,KAAA;UACAjC,IAAA;UACAkC,WAAA;UACArC,IAAA,EAAAA,IAAA,CAAAgB,MAAA,CAAAC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAoB,KAAA;UACAC,SAAA;YACAV,SAAA;cACAC,KAAA;YACA;UACA;;UACAU,QAAA;YACAtC,IAAA;YACAuC,SAAA;cACAX,KAAA;YACA;UACA;QACA;QACAY,KAAA;UACAvC,IAAA;UACAoC,SAAA;YACAV,SAAA;cACAC,KAAA;YACA;UACA;;UACAa,SAAA;YACAzC,IAAA;YACAuC,SAAA;cACAX,KAAA;YACA;UACA;UACAU,QAAA;YACAtC,IAAA;YACAuC,SAAA;cACAX,KAAA;YACA;UACA;QACA;QACAc,MAAA,GACA;UACA7C,IAAA;UACAI,IAAA;UACA0C,KAAA;UACA7C,IAAA,EAAAe,OAAA;UACA+B,SAAA;YACA;YACAhB,KAAA,MAAAhC,OAAA,CAAAiD,OAAA,CAAAC,cAAA,cACA;cAAAC,MAAA;cAAAnB,KAAA;YAAA,GACA;cAAAmB,MAAA;cAAAnB,KAAA;YAAA,GACA;cAAAmB,MAAA;cAAAnB,KAAA;YAAA,EACA;UACA;QACA,GACA;UACA/B,IAAA;UACAI,IAAA;UACA0C,KAAA;UACA7C,IAAA,EAAAmB,GAAA;UACA2B,SAAA;YACA;YACAhB,KAAA,MAAAhC,OAAA,CAAAiD,OAAA,CAAAC,cAAA,cACA;cACAC,MAAA;cACAnB,KAAA;YACA,GACA;cACAmB,MAAA;cACAnB,KAAA;YACA,EACA;YACAoB,OAAA;UACA;QACA;MAEA;MAEA5B,OAAA,CAAA6B,SAAA,CAAAzB,MAAA;MACA0B,MAAA,CAAAC,gBAAA;QACA/B,OAAA,CAAAgC,MAAA;MACA;IACA;EACA;AACA"}]}